{
	"openapi": "3.0.0",
	"info": {
		"description": "API Public Kalim Rudi",
		"version": "0.0.1",
		"title": "rudi-kalim-api",
		"termsOfService": "http://swagger.io/terms/",
		"contact": {
			"email": "contact@rudi.fr"
		},
		"license": {
			"name": "Apache 2.0",
			"url": "http://www.apache.org/licenses/LICENSE-2.0.html"
		}
	},
	"servers": [
		{
			"url": "/{basePath}",
			"description": "Rudi Kalim API",
			"variables": {
				"basePath": {
					"default": "kalim/v1"
				}
			}
		}
	],
	"tags": [
		{
			"name": "administration",
			"description": "Services d'administration"
		},
		{
			"name": "kalim",
			"description": "Services Kalim"
		},
		{
			"name": "miscellaneous",
			"description": "Services divers"
		}
	],
	"paths": {
		"/application-information": {
			"get": {
				"tags": [
					"miscellaneous"
				],
				"summary": "Récupération de la version applicative",
				"description": "Récupération d'information sur la version de l'application",
				"operationId": "getApplicationInformation",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AppInfo"
								}
							}
						}
					}
				}
			}
		},
		"/healthCheck": {
			"get": {
				"tags": [
					"miscellaneous"
				],
				"summary": "Test de vie de l'application'",
				"description": "Test de vie de l'application",
				"operationId": "checkHealth",
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/resources": {
			"post": {
				"tags": [
					"kalim"
				],
				"summary": "Création d'un jeu de données",
				"description": "Soumission d’une demande de création d’un jeu de données par ses métadonnées",
				"operationId": "createMetadata",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "Metadata"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "string",
									"format": "uuid"	
								}
							}
						}
					},
					"400": {
						"description": "Bad Request Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					},
					"406": {
						"description": "Not Acceptable",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					},
					"408": {
						"description": "Request Timeout",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					},
					"429": {
						"description": "Too Many Requests",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					},
					"503": {
						"description": "Service Unavailable",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					}
				}
			},
			"put": {
				"tags": [
					"kalim"
				],
				"summary": "Modification d'un jeu de données",
				"description": "Soumission d’une demande de modification d’un jeu de données par ses métadonnées",
				"operationId": "updateMetadata",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "Metadata"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "string",
									"format": "uuid"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					},
					"406": {
						"description": "Not Acceptable",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					},
					"408": {
						"description": "Request Timeout",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					},
					"429": {
						"description": "Too Many Requests",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					},
					"503": {
						"description": "Service Unavailable",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					}
				}
			}
		},
		"/resources/{globalId}": {
			"delete": {
				"tags": [
					"kalim"
				],
				"summary": "Suppression d'un jeu de données",
				"description": "Soumission d’une demande de suppression d’un jeu de données par ses métadonnées",
				"operationId": "deleteMetadata",
				"parameters": [
					{
						"in": "path",
						"name": "globalId",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "string",
									"format": "uuid"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					},
					"406": {
						"description": "Not Acceptable",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					},
					"408": {
						"description": "Request Timeout",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					},
					"429": {
						"description": "Too Many Requests",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					},
					"503": {
						"description": "Service Unavailable",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					}
				}
			}
		},
		"/id_generation":{
			"get": {
				"tags": [
					"kalim"
				],
				"summary": "Collection de demandes d'intégration",
				"description": "Recherche des demandes d'intégrations",
				"operationId": "generateId",
				"parameters": [],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "string",
									"format": "uuid"
								}
							}
						}
					}
				}
			}
		},
		"/integrationRequest/search": {
			"get": {
				"tags": [
					"kalim"
				],
				"summary": "Collection de demandes d'intégration",
				"description": "Recherche des demandes d'intégrations",
				"operationId": "searchIntegrationRequests",
				"parameters": [
					{
						"in": "query",
						"name": "integrationStatus",
						"description": "Statut d'intégration",
						"required": false,
						"schema": {
							"$ref": "rudi-kalim-model.json#/components/schemas/IntegrationStatus"
						}
					},
					{
						"in": "query",
						"name": "creationDateMin",
						"description": "",
						"required": false,
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"in": "query",
						"name": "creationDateMax",
						"description": "",
						"required": false,
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"in": "query",
						"name": "treatmentDateMin",
						"description": "",
						"required": false,
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"in": "query",
						"name": "treatmentDateMax",
						"description": "",
						"required": false,
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"in": "query",
						"name": "sendRequestDateMin",
						"description": "",
						"required": false,
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"in": "query",
						"name": "sendRequestDateMax",
						"description": "",
						"required": false,
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"in": "query",
						"name": "globalId",
						"description": "",
						"required": false,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"in": "query",
						"name": "offset",
						"description": "Index de début",
						"required": false,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"description": "Nombre de résultats à retourner",
						"required": false,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					},
					{
						"in": "query",
						"name": "order",
						"required": false,
						"schema": {
							"type": "string",
							"description": "liste des tris à réaliser. Exemple :  code,-libelle"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-kalim-model.json#/components/schemas/IntegrationRequestPageResult"
								}
							}
						}
					}
				}
			}
		},
		"/admin/warning/dont-use-repair-resources": {
			"post": {
				"tags": [
					"kalim"
				],
				"summary": "Répare les jeux de données",
				"description": "API obsolète à ce jour à ne pas utiliser car le lancement de cette API convertit les selfdata en des jdds ouverts",
				"operationId": "warningDontUseRepairResources",
				"responses": {
					"204": {
						"description": "OK"
					},
					"400": {
						"description": "Bad Request Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					},
					"406": {
						"description": "Not Acceptable",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					},
					"408": {
						"description": "Request Timeout",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					},
					"429": {
						"description": "Too Many Requests",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					},
					"503": {
						"description": "Service Unavailable",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					}
				}
			}
		},
		"/admin/repair-organizations": {
			"post": {
				"tags": [
					"kalim"
				],
				"summary": "Répare les organisations",
				"description": "S'assure que les organisations dans le µservice strukture possèdent bien un utilisateur dans le µservice ACL",
				"operationId": "repairOrganizations",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "rudi-kalim-model.json#/components/schemas/OrganizationsReparationReport"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					},
					"406": {
						"description": "Not Acceptable",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					},
					"408": {
						"description": "Request Timeout",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					},
					"429": {
						"description": "Too Many Requests",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					},
					"503": {
						"description": "Service Unavailable",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiError"
								}
							}
						}
					}
				}
			}
		},
		"/admin/create-missing-apis": {
			"post": {
				"tags": [
					"kalim"
				],
				"summary": "Recrée toutes les API manquantes.",
				"description": "À partir de tous les JDD actuellement connus, on crée toutes les API manquantes côté API Gateway.",
				"operationId": "createMissingApis",
				"parameters": [
					{
						"in": "query",
						"name": "globalIds",
						"required": false,
						"description": "On traite uniquement les JDD spécifiés. Si absent, on traite tous les JDD.",
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"format": "uuid"
							}
						}
					}
				],
				"responses": {
					"204": {
						"description": "APIs mises à jour avec succès. Veuillez consulter les logs serveur pour plus de détails."
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		},
		"/admin/delete-all-apis": {
			"post": {
				"tags": [
					"kalim"
				],
				"summary": "Supprime toutes les API dans l'API Gateway.",
				"description": "Supprime toutes les API dans l'API Gateway. On peut les recréer avec /admin/create-missing-apis.",
				"operationId": "deleteAllApis",
				"responses": {
					"204": {
						"description": "Toutes les APIs de l'API Gateway ont été supprimées avec succès. Veuillez consulter les logs serveur pour plus de détails."
					},
					"400": {
						"$ref": "#/components/responses/BadRequestError"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"406": {
						"$ref": "#/components/responses/NotAcceptable"
					},
					"408": {
						"$ref": "#/components/responses/RequestTimeout"
					},
					"429": {
						"$ref": "#/components/responses/TooManyRequests"
					},
					"500": {
						"$ref": "#/components/responses/InternalServerError"
					},
					"503": {
						"$ref": "#/components/responses/ServiceUnavailable"
					}
				}
			}
		}
	},
	"components": {
		"responses": {
			"InternalServerError": {
				"description": "Internal server error",
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/ApiError"
						}
					}
				}
			},
			"BadRequestError": {
				"description": "Bad Request Error",
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/ApiError"
						}
					}
				}
			},
			"Unauthorized": {
				"description": "Unauthorized",
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/ApiError"
						}
					}
				}
			},
			"Forbidden": {
				"description": "Forbidden",
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/ApiError"
						}
					}
				}
			},
			"NotAcceptable": {
				"description": "Not Acceptable",
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/ApiError"
						}
					}
				}
			},
			"RequestTimeout": {
				"description": "Request Timeout",
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/ApiError"
						}
					}
				}
			},
			"TooManyRequests": {
				"description": "Too Many Requests",
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/ApiError"
						}
					}
				}
			},
			"ServiceUnavailable": {
				"description": "Service Unavailable"
			}
		},
		"schemas": {
			"ApiError": {
				"type": "object",
				"properties": {
					"code": {
						"type": "string"
					},
					"label": {
						"type": "string"
					}
				}
			},
			"AppInfo": {
				"type": "object",
				"properties": {
					"version": {
						"type": "string",
						"description": "Numéro de version de l'application"
					},
					"comment": {
						"type": "string",
						"description": "Description de la version de l'application"
					}
				}
			}
		}
	}
}
