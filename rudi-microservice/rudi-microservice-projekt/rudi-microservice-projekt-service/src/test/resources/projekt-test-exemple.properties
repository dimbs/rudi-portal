## Version de l'application
application.version=@project.version@
application.comment=RUDI @project.version@

# pour ne pas activer automatiquement swagger lors des tests avec SpringBootTest
springdoc.swagger-ui.enabled=false

# Configuration des logs
#################################
#debug=true
#logging.level.org.hibernate=trace
#logging.level.org.flywaydb=debug
#logging.level.org.h2=debug


# Configuration BDD H2 pour tests
#################################
# pour bdd en memoire : il faut mettre DB_CLOSE_DELAY=-1 sinon la BDD est fermée et le contenu est perdu quand la connexion est fermée (erreur table non trouvée)
# jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1
# pour bdd dans un fichier : jdbc:h2:file:./target/h2/testdb;
# pour compatibilite PostgreSQL : MODE=PostgreSQL;DATABASE_TO_LOWER=TRUE
# pour creer le schema a la connexion :INIT=RUNSCRIPT FROM 'classpath:bdd/create_schema.sql' 
spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;MODE=PostgreSQL;DATABASE_TO_LOWER=TRUE;INIT=RUNSCRIPT FROM 'classpath:bdd/create_schema.sql';SCHEMA_SEARCH_PATH=projekt_data,public
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=projekt
spring.datasource.password=...

spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL94Dialect
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=false

# pour geospatial, changer le dialect :
#spring.jpa.properties.hibernate.dialect = org.hibernate.spatial.dialect.h2geodb.GeoDBDialect
#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
#spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false

# a décommenter pour utiliser la console h2
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2-console
#spring.h2.console.settings.trace=false


## Configuration FlyWay
########################
spring.flyway.enabled=true
spring.jpa.hibernate.ddl-auto=none

spring.flyway.user=${spring.datasource.username}
spring.flyway.password=${spring.datasource.password}
spring.flyway.url=${spring.datasource.url}
spring.flyway.schemas=projekt_data
spring.flyway.locations=classpath:bdd
spring.flyway.checklocations=true

# dataverse
dataverse.api.url=http://...:${dataverse.instance1.port}/api
dataverse.api.token=...
dataverse.instance1.port=8095
dataverse.instance2.port=8385

# dataverse Rudi Media
dataverse.api.rudi.media.data.alias=rudi_media_data
dataverse.api.rudi.data.alias=rudi_data
dataverse.api.rudi.archive.alias=rudi_archive

# Rudi OAuth2
module.oauth2.provider-uri=http://acl:8085/oauth/token
module.oauth2.client-id=rudi
module.oauth2.client-secret=...
module.oauth2.scope=read,write

freemarker.baseDirectory=./src/main/resources
freemarker.basePackage=templates

mail.smtp.host=...
mail.smtp.port=1025
user.authentication.maxFailedAttempt=5

security.jwt.access.tokenKey=901c990dd69fb05617ccbbae01e73053da60099bb5a759e2286c40471af275eb9c55bc54cb4213db3ca29f528586b862251385f78052439c01fe22268e421b60

## Task service
rudi.project.task.allowed.status.administrator=REJECTED, VALIDATED
rudi.project.task.allowed.status.owner=REJECTED
